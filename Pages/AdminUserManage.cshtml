@page
@model StudentPeformanceTracker.Pages.AdminUserManageModel
@{
    ViewData["Title"] = "User Management";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Admin Portal</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --sidebar-width: 250px;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }
        
        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: var(--sidebar-width);
            background-color: var(--secondary-color);
            color: white;
            transition: all 0.3s ease;
            z-index: 1000;
            box-shadow: 2px 0 5px rgba(0,0,0,0.1);
        }
        
        .sidebar.collapsed {
            width: var(--sidebar-collapsed-width);
        }
        
        .sidebar-header {
            padding: 1.5rem 1rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            text-align: center;
        }
        
        .sidebar-header h3 {
            margin: 0;
            font-size: 1.2rem;
            font-weight: 600;
            white-space: nowrap;
            overflow: hidden;
        }
        
        .sidebar.collapsed .sidebar-header h3 {
            display: none;
        }
        
        .sidebar-menu {
            padding: 1rem 0;
        }
        
        .sidebar-menu ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .sidebar-menu li {
            margin-bottom: 0.5rem;
        }
        
        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            transition: all 0.3s ease;
            white-space: nowrap;
            overflow: hidden;
        }
        
        .sidebar-menu a:hover, .sidebar-menu a.active {
            background-color: rgba(255,255,255,0.1);
            color: white;
            border-left: 4px solid var(--primary-color);
        }
        
        .sidebar-menu i {
            width: 24px;
            margin-right: 1rem;
            text-align: center;
        }
        
        .sidebar.collapsed .sidebar-menu span {
            display: none;
        }
        
        .sidebar.collapsed .sidebar-menu i {
            margin-right: 0;
        }
        
        .toggle-btn {
            position: absolute;
            top: 1rem;
            right: -15px;
            background-color: var(--secondary-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        .main-content {
            margin-left: var(--sidebar-width);
            min-height: 100vh;
            background-color: #f8f9fa;
        }
        
        .card-custom {
            background-color: white;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            border: none;
        }
        
        .section-title {
            color: var(--secondary-color);
            font-weight: 600;
            margin-bottom: 1rem;
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 0.5rem;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }
        
        .pending-badge {
            background-color: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
    </style>
</head>
<body>
    <!-- Sidebar Navigation -->
    <nav class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h3><i class="fas fa-user-shield me-2"></i>Admin Portal</h3>
        </div>
        <button class="toggle-btn" id="toggleBtn">
            <i class="fas fa-chevron-left"></i>
        </button>
        <div class="sidebar-menu">
            <ul>
                <li>
                    <a href="/AdminDashboard">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li>
                    <a href="/AdminUserManage" class="active">
                        <i class="fas fa-user"></i>
                        <span>User Management</span>
                    </a>
                </li> 
                <li>
                    <a href="/AdminStudentManage">
                        <i class="fas fa-user-graduate"></i>
                        <span>Students</span>
                    </a>
                </li>   
                <li>
                    <a href="/AdminTeacherManage">
                        <i class="fas fa-chalkboard-teacher"></i>
                        <span>Teachers</span>
                    </a>
                </li>
                <li>
                    <a href="/AdminCourseManage">
                        <i class="fas fa-book"></i>
                        <span>Courses</span>
                    </a>
                </li>
                <!-- <li>
                    <a href="/AdminAnalytics">
                        <i class="fas fa-chart-bar"></i>
                        <span>Analytics</span>
                    </a>
                </li> -->
                <li>
                    <a href="#">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li>
                    <a href="/LoginPage">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Logout</span>
                    </a>
                </li>
            </ul>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="main-content">
        <header class="bg-white shadow-sm py-3">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1 class="h3 mb-0">User Registration Approvals</h1>
                    <div class="d-flex align-items-center">
                        <div class="dropdown">
                            <button class="btn btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <img src="https://ui-avatars.com/api/?name=Admin+User&background=3498db&color=fff" class="user-avatar me-2">
                                Admin User
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#"><i class="fas fa-user me-2"></i>Profile</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-cog me-2"></i>Settings</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <main class="container my-4">
            <!-- Pending Approvals -->
            <div class="card-custom">
                <h3 class="section-title">
                    <i class="fas fa-clock me-2 text-warning"></i>Pending Approvals
                    <span class="badge bg-warning ms-2" id="pendingCount">3</span>
                </h3>
                
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>User</th>
                                <th>Email</th>
                                <th>Requested Role</th>
                                <th>Registration Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="pendingUsersTable">
                            <!-- Pending users will be populated here -->
                        </tbody>
                    </table>
                </div>
                
                <div class="text-center py-3" id="noPendingUsers" style="display: none;">
                    <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                    <p class="text-muted">No pending user registrations. All caught up!</p>
                </div>
            </div>

            <!-- Recently Processed -->
            <div class="card-custom">
                <h3 class="section-title">
                    <i class="fas fa-history me-2 text-secondary"></i>Recently Processed
                </h3>
                
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>User</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Processed Date</th>
                                <th>Processed By</th>
                            </tr>
                        </thead>
                        <tbody id="processedUsersTable">
                            <!-- Processed users will be populated here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Sample data for demonstration
        const pendingUsers = [
            {
                id: 1,
                name: "John Smith",
                email: "john.smith@email.com",
                requestedRole: "Student",
                registrationDate: "2024-01-15",
                avatar: "https://ui-avatars.com/api/?name=John+Smith&background=3498db&color=fff"
            },
            {
                id: 2,
                name: "Sarah Johnson",
                email: "sarah.j@email.com",
                requestedRole: "Teacher",
                registrationDate: "2024-01-14",
                avatar: "https://ui-avatars.com/api/?name=Sarah+Johnson&background=e74c3c&color=fff"
            },
            {
                id: 3,
                name: "Mike Wilson",
                email: "mike.wilson@email.com",
                requestedRole: "Student",
                registrationDate: "2024-01-16",
                avatar: "https://ui-avatars.com/api/?name=Mike+Wilson&background=2ecc71&color=fff"
            }
        ];

        const processedUsers = [
            {
                id: 4,
                name: "Emily Davis",
                email: "emily.davis@email.com",
                role: "Teacher",
                status: "Approved",
                processedDate: "2024-01-13",
                processedBy: "Admin User"
            },
            {
                id: 5,
                name: "Robert Brown",
                email: "robert.b@email.com",
                role: "Student",
                status: "Rejected",
                processedDate: "2024-01-12",
                processedBy: "Admin User"
            }
        ];

        // Populate pending users table
        function populatePendingUsers() {
            const tbody = document.getElementById('pendingUsersTable');
            const noPending = document.getElementById('noPendingUsers');
            const pendingCount = document.getElementById('pendingCount');
            
            if (pendingUsers.length === 0) {
                tbody.style.display = 'none';
                noPending.style.display = 'block';
                pendingCount.textContent = '0';
                return;
            }
            
            tbody.innerHTML = '';
            pendingCount.textContent = pendingUsers.length;
            
            pendingUsers.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <div class="d-flex align-items-center">
                            <img src="${user.avatar}" class="user-avatar me-3">
                            <div>
                                <strong>${user.name}</strong>
                            </div>
                        </div>
                    </td>
                    <td>${user.email}</td>
                    <td>
                        <span class="badge ${user.requestedRole === 'Teacher' ? 'bg-info' : 'bg-primary'}">
                            ${user.requestedRole}
                        </span>
                    </td>
                    <td>${new Date(user.registrationDate).toLocaleDateString()}</td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-success" onclick="approveUser(${user.id}, '${user.requestedRole}')">
                                <i class="fas fa-check me-1"></i>Approve
                            </button>
                            <button class="btn btn-danger" onclick="rejectUser(${user.id})">
                                <i class="fas fa-times me-1"></i>Reject
                            </button>
                            <button class="btn btn-outline-secondary" onclick="viewDetails(${user.id})">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        // Populate processed users table
        function populateProcessedUsers() {
            const tbody = document.getElementById('processedUsersTable');
            
            tbody.innerHTML = '';
            
            processedUsers.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${user.name}</td>
                    <td>${user.email}</td>
                    <td>
                        <span class="badge ${user.role === 'Teacher' ? 'bg-info' : 'bg-primary'}">
                            ${user.role}
                        </span>
                    </td>
                    <td>
                        <span class="badge ${user.status === 'Approved' ? 'bg-success' : 'bg-danger'}">
                            ${user.status}
                        </span>
                    </td>
                    <td>${new Date(user.processedDate).toLocaleDateString()}</td>
                    <td>${user.processedBy}</td>
                `;
                tbody.appendChild(row);
            });
        }

        // Action functions
        function approveUser(userId, role) {
            if (confirm(`Approve this user as ${role}?`)) {
                alert(`User ${userId} approved as ${role}. In a real application, this would update the database.`);
                // Remove from pending and add to processed
                const userIndex = pendingUsers.findIndex(u => u.id === userId);
                if (userIndex > -1) {
                    const user = pendingUsers[userIndex];
                    pendingUsers.splice(userIndex, 1);
                    
                    // Add to processed users
                    processedUsers.unshift({
                        ...user,
                        role: role,
                        status: 'Approved',
                        processedDate: new Date().toISOString().split('T')[0],
                        processedBy: 'Admin User'
                    });
                    
                    populatePendingUsers();
                    populateProcessedUsers();
                }
            }
        }

        function rejectUser(userId) {
            if (confirm('Reject this user registration?')) {
                alert(`User ${userId} rejected. In a real application, this would update the database.`);
                // Remove from pending and add to processed as rejected
                const userIndex = pendingUsers.findIndex(u => u.id === userId);
                if (userIndex > -1) {
                    const user = pendingUsers[userIndex];
                    pendingUsers.splice(userIndex, 1);
                    
                    // Add to processed users as rejected
                    processedUsers.unshift({
                        ...user,
                        role: user.requestedRole,
                        status: 'Rejected',
                        processedDate: new Date().toISOString().split('T')[0],
                        processedBy: 'Admin User'
                    });
                    
                    populatePendingUsers();
                    populateProcessedUsers();
                }
            }
        }

        function viewDetails(userId) {
            alert(`View details for user ${userId}. In a real application, this would show a modal with user details.`);
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            populatePendingUsers();
            populateProcessedUsers();
        });
    </script>
</body>
</html>