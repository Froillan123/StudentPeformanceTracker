@page "/Teacher/Profile"
@model StudentPeformanceTracker.Pages.Teacher.TeacherProfileModel
@{
    ViewData["Title"] = "Teacher Profile";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teacher Profile - Teacher Portal</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2196F3;
            --secondary-color: #f5f5f5;
            --accent-color: #FF9800;
            --text-color: #333;
            --border-color: #e0e0e0;
            --sidebar-width: 250px;
            --sidebar-collapsed-width: 70px;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f9f9f9;
            color: var(--text-color);
            overflow-x: hidden;
        }
        
        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: var(--sidebar-width);
            background-color: var(--primary-color);
            color: white;
            transition: all 0.3s ease;
            z-index: 1000;
            box-shadow: 2px 0 5px rgba(0,0,0,0.1);
        }
        
        .sidebar.collapsed {
            width: var(--sidebar-collapsed-width);
        }
        
        .sidebar-header {
            padding: 1.5rem 1rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            text-align: center;
        }
        
        .sidebar-header h3 {
            margin: 0;
            font-size: 1.2rem;
            font-weight: 600;
            white-space: nowrap;
            overflow: hidden;
        }
        
        .sidebar.collapsed .sidebar-header h3 {
            display: none;
        }
        
        .sidebar-menu {
            padding: 1rem 0;
        }
        
        .sidebar-menu ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .sidebar-menu li {
            margin-bottom: 0.5rem;
        }
        
        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            transition: all 0.3s ease;
            white-space: nowrap;
            overflow: hidden;
        }
        
        .sidebar-menu a:hover, .sidebar-menu a.active {
            background-color: rgba(255,255,255,0.1);
            color: white;
            border-left: 4px solid var(--accent-color);
        }
        
        .sidebar-menu i {
            width: 24px;
            margin-right: 1rem;
            text-align: center;
        }
        
        .sidebar.collapsed .sidebar-menu span {
            display: none;
        }
        
        .sidebar.collapsed .sidebar-menu i {
            margin-right: 0;
        }
        
        .toggle-btn {
            position: absolute;
            top: 1rem;
            right: -15px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        /* Main Content Area */
        .main-content {
            margin-left: var(--sidebar-width);
            transition: all 0.3s ease;
            min-height: 100vh;
            background-color: #f9f9f9;
        }
        
        .main-content.expanded {
            margin-left: var(--sidebar-collapsed-width);
        }
        
        .dashboard-header {
            background-color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 1rem 0;
        }
        
        .profile-card {
            background-color: white;
            border-radius: 8px;
            padding: 2rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        
        .profile-header {
            text-align: center;
            margin-bottom: 2rem;
        }
        
        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-color), #7986cb);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            color: white;
            font-size: 3rem;
        }
        
        .profile-stats {
            background-color: white;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        
        .stat-item {
            text-align: center;
            padding: 1rem;
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
            display: block;
        }
        
        .stat-label {
            color: #666;
            font-size: 0.9rem;
        }
        
        .section-title {
            color: var(--primary-color);
            font-weight: 600;
            margin-bottom: 1.5rem;
        }
        
        .info-item {
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
        }
        
        .info-label {
            font-weight: 600;
            color: #666;
            margin-bottom: 0.25rem;
        }
        
        .info-value {
            color: var(--text-color);
        }
        
        .btn-edit {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            font-weight: 500;
        }
        
        .btn-edit:hover {
            background-color: #1976D2;
            border-color: #1976D2;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }
    </style>
</head>
<body>
    <!-- Sidebar Navigation -->
    @await Html.PartialAsync("Shared/_TeacherNavigation")

    <!-- Main Content -->
    <div class="main-content" id="mainContent">
        <!-- Dashboard Header -->
        <header class="dashboard-header">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1 class="h3 mb-0">Teacher Profile</h1>
                    <div class="d-flex align-items-center">
                        <div class="dropdown">
                            <button class="btn btn-light dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <img src="https://ui-avatars.com/api/?name=Loading&background=2196F3&color=fff" class="user-avatar me-2" id="headerAvatar">
                                <span id="headerName">Loading...</span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="/Teacher/Profile"><i class="fas fa-user me-2"></i>My Profile</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-cog me-2"></i>Settings</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="/LoginPage"><i class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <!-- Page Content -->
        <main class="container my-4">
            <div class="row">
                <!-- Left Column - Profile Info -->
                <div class="col-lg-8">
                    <!-- Profile Card -->
                    <div class="profile-card">
                        <div class="profile-header">
                            <div class="profile-avatar">
                                <i class="fas fa-chalkboard-teacher"></i>
                            </div>
                            <h2 class="h3" id="teacherName">Loading...</h2>
                            <p class="text-muted" id="teacherPosition">Loading...</p>
                            <button class="btn btn-edit" onclick="editProfile()">
                                <i class="fas fa-edit me-2"></i>Edit Profile
                            </button>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <h4 class="section-title">Personal Information</h4>
                                <div class="info-item">
                                    <div class="info-label">Full Name</div>
                                    <div class="info-value" id="fullName">Loading...</div>
                                </div>
                                <div class="info-item">
                                    <div class="info-label">Email Address</div>
                                    <div class="info-value" id="email">Loading...</div>
                                </div>
                                <div class="info-item">
                                    <div class="info-label">Phone Number</div>
                                    <div class="info-value" id="phone">Loading...</div>
                                </div>
                                <div class="info-item">
                                    <div class="info-label">Username</div>
                                    <div class="info-value" id="username">Loading...</div>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <h4 class="section-title">Professional Information</h4>
                                <div class="info-item">
                                    <div class="info-label">Teacher ID</div>
                                    <div class="info-value" id="teacherId">Loading...</div>
                                </div>
                                <div class="info-item">
                                    <div class="info-label">Departments</div>
                                    <div class="info-value" id="departments">Loading...</div>
                                </div>
                                <div class="info-item">
                                    <div class="info-label">Status</div>
                                    <div class="info-value" id="status">Loading...</div>
                                </div>
                                <div class="info-item">
                                    <div class="info-label">Hire Date</div>
                                    <div class="info-value" id="hireDate">Loading...</div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <!-- Right Column - Stats -->
                <div class="col-lg-4">
                    <!-- Quick Stats -->
                    <div class="profile-stats">
                        <h4 class="section-title">Teaching Statistics</h4>
                        <div class="row text-center">
                            <div class="col-6 mb-3">
                                <div class="stat-item">
                                    <span class="stat-number">5</span>
                                    <span class="stat-label">Classes</span>
                                </div>
                            </div>
                            <div class="col-6 mb-3">
                                <div class="stat-item">
                                    <span class="stat-number">98</span>
                                    <span class="stat-label">Students</span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="stat-item">
                                    <span class="stat-number">3</span>
                                    <span class="stat-label">Subjects</span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="stat-item">
                                    <span class="stat-number">92%</span>
                                    <span class="stat-label">Attendance</span>
                                </div>
                            </div>
                        </div>
                    </div>


                    <!-- Emergency Contact -->
                    <div class="profile-stats">
                        <h4 class="section-title">Emergency Contact</h4>
                        <div class="info-item">
                            <div class="info-label">Contact Person</div>
                            <div class="info-value" id="emergencyContact">Loading...</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Phone Number</div>
                            <div class="info-value" id="emergencyPhone">Loading...</div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Edit Profile Modal -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editProfileForm">
                        <!-- Personal Information -->
                        <h6 class="fw-bold mb-3">
                            <i class="fas fa-user me-2"></i>Personal Information
                        </h6>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="editFirstName" class="form-label">First Name *</label>
                                <input type="text" class="form-control" id="editFirstName" name="firstName" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="editLastName" class="form-label">Last Name *</label>
                                <input type="text" class="form-control" id="editLastName" name="lastName" required>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="editPhone" class="form-label">Phone Number</label>
                                <input type="tel" class="form-control" id="editPhone" name="phone">
                            </div>
                        </div>

                        <!-- Professional Information -->
                        <h6 class="fw-bold mb-3 mt-4">
                            <i class="fas fa-briefcase me-2"></i>Professional Information
                        </h6>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="editHighestQualification" class="form-label">Highest Qualification</label>
                                <input type="text" class="form-control" id="editHighestQualification" name="highestQualification" placeholder="e.g., Master's Degree, PhD">
                            </div>
                        </div>

                        <!-- Emergency Contact -->
                        <h6 class="fw-bold mb-3 mt-4">
                            <i class="fas fa-phone-alt me-2"></i>Emergency Contact
                        </h6>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="editEmergencyContact" class="form-label">Emergency Contact Name</label>
                                <input type="text" class="form-control" id="editEmergencyContact" name="emergencyContact">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="editEmergencyPhone" class="form-label">Emergency Contact Phone</label>
                                <input type="tel" class="form-control" id="editEmergencyPhone" name="emergencyPhone">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="updateProfileBtn">
                        <i class="fas fa-save me-2"></i>Update Profile
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Store current profile data globally
        let currentProfileData = null;

        // Load profile data on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadProfileData();
        });

        // Load profile data from API
        async function loadProfileData() {
            try {
                const response = await fetch('/api/v1/teacher/profile');
                if (response.ok) {
                    const profileData = await response.json();
                    displayProfileData(profileData);
                } else {
                    console.error('Failed to load profile data');
                    showErrorMessage('Failed to load profile data');
                }
            } catch (error) {
                console.error('Error loading profile data:', error);
                showErrorMessage('Error loading profile data');
            }
        }

        // Display profile data
        function displayProfileData(data) {
            currentProfileData = data; // Store for editing
            
            // Personal Information
            const fullName = `${data.firstName} ${data.lastName}`;
            document.getElementById('teacherName').textContent = fullName;
            document.getElementById('fullName').textContent = fullName;
            document.getElementById('email').textContent = data.email || 'Not provided';
            document.getElementById('phone').textContent = data.phone || 'Not provided';
            document.getElementById('username').textContent = data.username;
            
            // Update header with real teacher name
            document.getElementById('headerName').textContent = fullName;
            document.getElementById('headerAvatar').src = `https://ui-avatars.com/api/?name=${encodeURIComponent(fullName)}&background=2196F3&color=fff`;
            
            // Professional Information
            document.getElementById('teacherId').textContent = `TCH-${data.id.toString().padStart(4, '0')}`;
            document.getElementById('status').textContent = data.status || 'Not specified';
            document.getElementById('hireDate').textContent = data.hireDate ? new Date(data.hireDate).toLocaleDateString() : 'Not specified';
            
            // Departments
            if (data.departments && data.departments.length > 0) {
                const departmentNames = data.departments.map(dept => dept.departmentName).join(', ');
                document.getElementById('departments').textContent = departmentNames;
            } else {
                document.getElementById('departments').textContent = 'No departments assigned';
            }
            
            // Emergency Contact
            document.getElementById('emergencyContact').textContent = data.emergencyContact || 'Not provided';
            document.getElementById('emergencyPhone').textContent = data.emergencyPhone || 'Not provided';
        }

        // Show error message
        function showErrorMessage(message) {
            document.getElementById('teacherName').textContent = 'Error';
            document.getElementById('fullName').textContent = message;
            document.getElementById('email').textContent = 'Error';
            document.getElementById('phone').textContent = 'Error';
            document.getElementById('username').textContent = 'Error';
        }

        // Edit profile functionality
        function editProfile() {
            if (!currentProfileData) {
                alert('Profile data not loaded yet. Please wait and try again.');
                return;
            }

            // Populate form with current data
            document.getElementById('editFirstName').value = currentProfileData.firstName || '';
            document.getElementById('editLastName').value = currentProfileData.lastName || '';
            document.getElementById('editPhone').value = currentProfileData.phone || '';
            document.getElementById('editHighestQualification').value = currentProfileData.highestQualification || '';
            document.getElementById('editEmergencyContact').value = currentProfileData.emergencyContact || '';
            document.getElementById('editEmergencyPhone').value = currentProfileData.emergencyPhone || '';

            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('editProfileModal'));
            modal.show();
        }

        // Update profile functionality
        document.getElementById('updateProfileBtn').addEventListener('click', async function() {
            const formData = new FormData(document.getElementById('editProfileForm'));
            
            const updateData = {
                FirstName: formData.get('firstName'),
                LastName: formData.get('lastName'),
                Phone: formData.get('phone'),
                HighestQualification: formData.get('highestQualification'),
                EmergencyContact: formData.get('emergencyContact'),
                EmergencyPhone: formData.get('emergencyPhone')
            };

            try {
                const response = await fetch('/api/v1/teacher/profile', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updateData)
                });

                if (response.ok) {
                    const result = await response.json();
                    
                    // Close modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editProfileModal'));
                    modal.hide();
                    
                    // Reload profile data to show updated information
                    loadProfileData();
                    
                    // Show success message
                    showToast('Profile updated successfully!', 'success');
                } else {
                    const error = await response.json();
                    showToast(error.message || 'Failed to update profile', 'error');
                }
            } catch (error) {
                console.error('Error updating profile:', error);
                showToast('Error updating profile', 'error');
            }
        });

        // Toast notification function
        function showToast(message, type = 'info') {
            // Create toast element
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'info'} border-0`;
            toast.setAttribute('role', 'alert');
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'} me-2"></i>
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;

            // Add to page
            document.body.appendChild(toast);

            // Show toast
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();

            // Remove from DOM after hiding
            toast.addEventListener('hidden.bs.toast', () => {
                document.body.removeChild(toast);
            });
        }
    </script>
</body>
</html>
